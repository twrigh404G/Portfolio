[{"/home/wrightterrell049/Portfolio/src/pages/_app.tsx":"1","/home/wrightterrell049/Portfolio/src/pages/_document.tsx":"2","/home/wrightterrell049/Portfolio/src/pages/api/hello.ts":"3","/home/wrightterrell049/Portfolio/src/pages/index.tsx":"4","/home/wrightterrell049/Portfolio/src/pages/ssrpage.tsx":"5","/home/wrightterrell049/Portfolio/src/components/EmotionButton.tsx":"6","/home/wrightterrell049/Portfolio/src/components/StyledEmotionButton.tsx":"7","/home/wrightterrell049/Portfolio/src/lib/createEmotionCache.ts":"8"},{"size":1091,"mtime":1655829475631,"results":"9","hashOfConfig":"10"},{"size":2890,"mtime":1655050284592,"results":"11","hashOfConfig":"10"},{"size":307,"mtime":1654712873443,"results":"12","hashOfConfig":"10"},{"size":1282,"mtime":1655792068839,"results":"13","hashOfConfig":"10"},{"size":603,"mtime":1654712873445,"results":"14","hashOfConfig":"10"},{"size":405,"mtime":1654712873442,"results":"15","hashOfConfig":"10"},{"size":513,"mtime":1654712873442,"results":"16","hashOfConfig":"10"},{"size":155,"mtime":1654712873442,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"5ot7vi",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/home/wrightterrell049/Portfolio/src/pages/_app.tsx",["40","41","42"],"import Head from 'next/head';\nimport { AppProps } from 'next/app';\nimport { ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { CacheProvider, EmotionCache } from '@emotion/react';\nimport theme from '../../styles/theme';\nimport createEmotionCache from '../../src/lib/createEmotionCache';\n\n\n\n\n// Client-side cache, shared for the whole session of the user in the browser.\nconst clientSideEmotionCache = createEmotionCache();\n\ninterface MyAppProps extends AppProps {\n  emotionCache?: EmotionCache;\n}\n\nconst App = (props: MyAppProps) => {\n  const { Component, emotionCache = clientSideEmotionCache, pageProps } = props;\n  return (\n    <CacheProvider value={emotionCache}>\n      <Head>\n        <title>My page</title>\n        <meta name=\"viewport\" content=\"initial-scale=1, width=device-width\" />\n      </Head>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n      </ThemeProvider>\n    </CacheProvider>\n  );\n};\n\nexport default App;\n","/home/wrightterrell049/Portfolio/src/pages/_document.tsx",["43","44"],"import * as React from 'react';\n// eslint-disable-next-line @next/next/no-document-import-in-page\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport createEmotionServer from '@emotion/server/create-instance';\nimport theme from '../../styles/theme';\nimport createEmotionCache from '../../src/lib/createEmotionCache';\n\nexport default class MyDocument extends Document {\n  render() {\n    return (\n      <Html lang=\"en\">\n        <Head>\n          {/* PWA primary color */}\n          <meta name=\"theme-color\" content={theme.palette.primary.main} />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n          />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n          />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n\n// `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with static-site generation (SSG).\nMyDocument.getInitialProps = async (ctx) => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n\n  const originalRenderPage = ctx.renderPage;\n\n  // You can consider sharing the same emotion cache between all the SSR requests to speed up performance.\n  // However, be aware that it can have global side effects.\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  ctx.renderPage = () =>\n    originalRenderPage({\n      // eslint-disable-next-line react/display-name\n      enhanceApp: (App: any) => (props) =>\n        <App emotionCache={cache} {...props} />,\n    });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  // This is important. It prevents emotion to render invalid HTML.\n  // See https://github.com/mui-org/material-ui/issues/26561#issuecomment-855286153\n  const emotionStyles = extractCriticalToChunks(initialProps.html);\n  const emotionStyleTags = emotionStyles.styles.map((style) => (\n    <style\n      data-emotion={`${style.key} ${style.ids.join(' ')}`}\n      key={style.key}\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{ __html: style.css }}\n    />\n  ));\n\n  return {\n    ...initialProps,\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [\n      ...React.Children.toArray(initialProps.styles),\n      ...emotionStyleTags,\n    ],\n  };\n};\n","/home/wrightterrell049/Portfolio/src/pages/api/hello.ts",["45"],"// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\nimport type { NextApiRequest, NextApiResponse } from 'next'\n\ntype Data = {\n  name: string\n}\n\nexport default function handler(\n  req: NextApiRequest,\n  res: NextApiResponse<Data>\n) {\n  res.status(200).json({ name: 'John Doe' })\n}\n","/home/wrightterrell049/Portfolio/src/pages/index.tsx",["46"],"import type { NextPage } from 'next';\nimport Head from 'next/head';\nimport Image from 'next/image';\nimport EmotionButton from '../components/EmotionButton';\nimport styles from '../../styles/Home.module.css';\nimport StyledEmotionButton from '../components/StyledEmotionButton';\n\nconst Home: NextPage = () => {\n  \n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Create Next App</title>\n        <meta name=\"Terrell-Portfolio\" content=\"Generated by create next app\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main className={styles.main}>\n        <h1 className={styles.title}>\n          Welcome to <a href=\"https://nextjs.org\">Next.js!</a>\n        </h1>\n        <div>\n          <h1>text</h1>\n        </div>\n      </main>\n      <EmotionButton />\n\n      <footer className={styles.footer}>\n        <a\n          href=\"https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Powered by{' '}\n          <span className={styles.logo}>\n            <Image src=\"/vercel.svg\" alt=\"Vercel Logo\" width={72} height={16} />\n          </span>\n        </a>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;\n","/home/wrightterrell049/Portfolio/src/pages/ssrpage.tsx",["47","48"],"import { Button, Typography } from '@mui/material';\nimport { GetServerSidePropsContext } from 'next';\nimport { FC } from 'react';\nimport StyledEmotionButton from '../components/StyledEmotionButton';\n\nconst SSRPage: FC = () => {\n  return (\n    <>\n      <Typography variant=\"h4\">Welcome to the server!</Typography>\n      <Button type=\"button\" variant=\"contained\" color=\"primary\">\n        Server Rendered Button\n      </Button>\n      <StyledEmotionButton />\n    </>\n  );\n};\n\nexport const getServerSideProps = (ctx: GetServerSidePropsContext) => {\n  return {\n    props: {},\n  };\n};\n\nexport default SSRPage;\n","/home/wrightterrell049/Portfolio/src/components/EmotionButton.tsx",[],"/home/wrightterrell049/Portfolio/src/components/StyledEmotionButton.tsx",[],"/home/wrightterrell049/Portfolio/src/lib/createEmotionCache.ts",["49"],"import createCache from '@emotion/cache';\n\nconst createEmotionCache = () => {\n  return createCache({ key: 'css' });\n};\n\nexport default createEmotionCache;\n",{"ruleId":"50","severity":1,"message":"51","line":19,"column":13,"nodeType":"52","messageId":"53","endLine":19,"endColumn":35},{"ruleId":"54","severity":1,"message":"55","line":20,"column":11,"nodeType":"56","messageId":"57","endLine":20,"endColumn":20},{"ruleId":"54","severity":1,"message":"58","line":20,"column":61,"nodeType":"56","messageId":"57","endLine":20,"endColumn":70},{"ruleId":"50","severity":1,"message":"51","line":9,"column":3,"nodeType":"59","messageId":"53","endLine":9,"endColumn":11},{"ruleId":"60","severity":1,"message":"61","line":68,"column":25,"nodeType":"62","messageId":"63","endLine":68,"endColumn":28,"suggestions":"64"},{"ruleId":"50","severity":1,"message":"51","line":8,"column":16,"nodeType":"65","messageId":"53","endLine":11,"endColumn":2},{"ruleId":"54","severity":1,"message":"66","line":6,"column":8,"nodeType":"56","messageId":"57","endLine":6,"endColumn":27},{"ruleId":"50","severity":1,"message":"51","line":18,"column":35,"nodeType":"52","messageId":"53","endLine":18,"endColumn":70},{"ruleId":"54","severity":1,"message":"67","line":18,"column":36,"nodeType":"56","messageId":"57","endLine":18,"endColumn":66},{"ruleId":"50","severity":1,"message":"51","line":3,"column":28,"nodeType":"52","messageId":"53","endLine":3,"endColumn":33},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'Component' is assigned a value but never used.","Identifier","unusedVar","'pageProps' is assigned a value but never used.","FunctionExpression","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["68","69"],"FunctionDeclaration","'StyledEmotionButton' is defined but never used.","'ctx' is defined but never used.",{"messageId":"70","fix":"71","desc":"72"},{"messageId":"73","fix":"74","desc":"75"},"suggestUnknown",{"range":"76","text":"77"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"76","text":"78"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[2040,2043],"unknown","never"]